{"ast":null,"code":"import _slicedToArray from \"/home/cilada/workspace/todo_list/todolist_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/cilada/workspace/todo_list/todolist_front/src/components/TodoList.js\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { logoutRequest } from '../store/actions/loginActions';\nimport { addTaskRequest, getTaskRequest, removeTaskRequest } from '../store/actions/todoListActions';\nimport \"../styles.css\";\n\nconst TodoList = () => {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        task = _useState2[0],\n        setTask = _useState2[1];\n\n  const _useSelector = useSelector(({\n    login\n  }) => login),\n        logged = _useSelector.logged,\n        user = _useSelector.user,\n        email = _useSelector.user.email;\n\n  const _useSelector2 = useSelector(({\n    todoList\n  }) => todoList),\n        tasks = _useSelector2.tasks;\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getTaskRequest(user._id));\n  }, [dispatch, user._id]);\n  if (!logged) return React.createElement(Redirect, {\n    to: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  });\n\n  const handleLogout = () => {\n    dispatch(logoutRequest());\n  };\n\n  const handleAddTask = () => {\n    dispatch(addTaskRequest({\n      email,\n      task\n    }));\n  };\n\n  const handleRemoveTask = taskIndex => {\n    dispatch(removeTaskRequest({\n      email,\n      taskIndex\n    }));\n  };\n  /*\n  const handleToggleTask = ( taskIndex ) => {\n      dispatch(toggleTaskRequest({ email, taskIndex }));\n  };\n   todo.id === action.payload.id ? { ...todo, complete: !todo.complete } : todo\n  */\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"TO DO LIST\"), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    placeholder: \"New task\",\n    type: \"text\",\n    onChange: event => setTask(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: handleAddTask,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Add new task\")), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, tasks.map((taskName, taskIndex) => React.createElement(\"li\", {\n    key: taskIndex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, taskName, React.createElement(\"button\", {\n    onClick: () => handleRemoveTask(taskIndex),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Remove\")))), React.createElement(\"button\", {\n    onClick: handleLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"LOGOUT\")));\n};\n\nexport default withRouter(TodoList);","map":{"version":3,"sources":["/home/cilada/workspace/todo_list/todolist_front/src/components/TodoList.js"],"names":["React","useState","useEffect","useDispatch","useSelector","withRouter","Redirect","logoutRequest","addTaskRequest","getTaskRequest","removeTaskRequest","TodoList","task","setTask","login","logged","user","email","todoList","tasks","dispatch","_id","handleLogout","handleAddTask","handleRemoveTask","taskIndex","event","target","value","map","taskName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState, useEffect} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter, Redirect } from 'react-router-dom';\n\nimport { logoutRequest } from '../store/actions/loginActions';\nimport { addTaskRequest, getTaskRequest, removeTaskRequest } from '../store/actions/todoListActions';\n\nimport \"../styles.css\";\n\nconst TodoList = () => {\n    const [task, setTask] = useState();\n    const { logged, user, user: {email} } = useSelector(({login}) => login);\n    const { tasks } = useSelector(({todoList}) => todoList);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getTaskRequest(user._id));\n    }, [dispatch, user._id]);\n\n    if (!logged) return <Redirect to='/login'/>\n\n    const handleLogout = () => {\n        dispatch(logoutRequest());\n    };\n\n    const handleAddTask = () => {\n        dispatch(addTaskRequest({ email, task }));\n    };\n\n    const handleRemoveTask = ( taskIndex ) => {\n        dispatch(removeTaskRequest({ email, taskIndex }));\n    };\n\n    /*\n    const handleToggleTask = ( taskIndex ) => {\n        dispatch(toggleTaskRequest({ email, taskIndex }));\n    };\n\n    todo.id === action.payload.id ? { ...todo, complete: !todo.complete } : todo\n    */\n    \n    return(\n        <div>\n            <section>\n                <h1>TO DO LIST</h1>\n                <form>\n                    <input placeholder=\"New task\" type=\"text\" onChange={event => setTask(event.target.value)}/>\n                    <button onClick={handleAddTask}>Add new task</button>\n                </form>\n\n                <ul>\n                    {tasks.map(( taskName , taskIndex ) => (\n                        <li key={ taskIndex }> \n                            { taskName }\n                            <button onClick={() => handleRemoveTask( taskIndex )}>Remove</button>\n                        </li>\n                    ))}\n                </ul>\n                 \n                <button onClick={handleLogout}>LOGOUT</button>\n            </section>\n        </div>\n    )\n};\n\nexport default withRouter(TodoList);"]},"metadata":{},"sourceType":"module"}