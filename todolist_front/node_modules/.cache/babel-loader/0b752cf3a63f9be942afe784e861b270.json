{"ast":null,"code":"import _slicedToArray from \"/home/cilada/workspace/todo_list/todolist_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/cilada/workspace/todo_list/todolist_front/src/components/ResetPassword.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { resetPasswordRequest } from '../store/actions/resetPasswordActions';\nimport \"../styles.css\";\nconst url = \"http://localhost:3000\";\n\nconst ResetPassword = () => {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        email = _useState2[0],\n        setEmail = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        token = _useState6[0],\n        setToken = _useState6[1];\n\n  const _useSelector = useSelector(({\n    login\n  }) => login),\n        logged = _useSelector.logged;\n\n  const dispatch = useDispatch();\n  if (logged) return React.createElement(Redirect, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  });\n\n  const handleSubmit = () => {\n    event.preventDefault();\n    dispatch(resetPasswordRequest({\n      token,\n      email,\n      password\n    }));\n    window.location.replace(`${url}/login`);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"RESET PASSWORD\"), React.createElement(\"input\", {\n    className: \"fullInput\",\n    type: \"email\",\n    placeholder: \"Email\",\n    onChange: event => setEmail(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"fullInput\",\n    type: \"password\",\n    placeholder: \"New Password\",\n    onChange: event => setPassword(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"fullInput\",\n    type: \"text\",\n    placeholder: \"Authorization token\",\n    onChange: event => setToken(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \" Reset Password \")));\n};\n\nexport default withRouter(ResetPassword);","map":{"version":3,"sources":["/home/cilada/workspace/todo_list/todolist_front/src/components/ResetPassword.js"],"names":["React","useState","useDispatch","useSelector","withRouter","Redirect","resetPasswordRequest","url","ResetPassword","email","setEmail","password","setPassword","token","setToken","login","logged","dispatch","handleSubmit","event","preventDefault","window","location","replace","target","value"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,kBAArC;AAEA,SAASC,oBAAT,QAAqC,uCAArC;AAEA,OAAO,eAAP;AAEA,MAAMC,GAAG,GAAG,uBAAZ;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA,oBACEP,QAAQ,EADV;AAAA;AAAA,QACjBQ,KADiB;AAAA,QACVC,QADU;;AAAA,qBAEQT,QAAQ,EAFhB;AAAA;AAAA,QAEjBU,QAFiB;AAAA,QAEPC,WAFO;;AAAA,qBAGEX,QAAQ,EAHV;AAAA;AAAA,QAGjBY,KAHiB;AAAA,QAGVC,QAHU;;AAAA,uBAILX,WAAW,CAAC,CAAC;AAACY,IAAAA;AAAD,GAAD,KAAaA,KAAd,CAJN;AAAA,QAIhBC,MAJgB,gBAIhBA,MAJgB;;AAKxB,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;AAEA,MAAIc,MAAJ,EAAY,OAAO,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;;AAEZ,QAAME,YAAY,GAAG,MAAM;AACvBC,IAAAA,KAAK,CAACC,cAAN;AACAH,IAAAA,QAAQ,CAACX,oBAAoB,CAAC;AAAEO,MAAAA,KAAF;AAASJ,MAAAA,KAAT;AAAgBE,MAAAA;AAAhB,KAAD,CAArB,CAAR;AACAU,IAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAyB,GAAEhB,GAAI,QAA/B;AACH,GAJD;;AAMA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAO,IAAA,SAAS,EAAC,WAAjB;AAA6B,IAAA,IAAI,EAAC,OAAlC;AAA0C,IAAA,WAAW,EAAC,OAAtD;AAA8D,IAAA,QAAQ,EAAEY,KAAK,IAAIT,QAAQ,CAACS,KAAK,CAACK,MAAN,CAAaC,KAAd,CAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,OAEqH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFrH,EAGI;AAAO,IAAA,SAAS,EAAC,WAAjB;AAA6B,IAAA,IAAI,EAAC,UAAlC;AAA6C,IAAA,WAAW,EAAC,cAAzD;AAAwE,IAAA,QAAQ,EAAEN,KAAK,IAAIP,WAAW,CAACO,KAAK,CAACK,MAAN,CAAaC,KAAd,CAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,OAGkI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHlI,EAII;AAAO,IAAA,SAAS,EAAC,WAAjB;AAA6B,IAAA,IAAI,EAAC,MAAlC;AAAyC,IAAA,WAAW,EAAC,qBAArD;AAA2E,IAAA,QAAQ,EAAEN,KAAK,IAAIL,QAAQ,CAACK,KAAK,CAACK,MAAN,CAAaC,KAAd,CAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,OAIkI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJlI,EAKI;AAAQ,IAAA,OAAO,EAAEP,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALJ,CADJ,CADJ;AAWH,CA1BD;;AA4BA,eAAed,UAAU,CAACI,aAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter, Redirect } from 'react-router-dom';\n\nimport { resetPasswordRequest } from '../store/actions/resetPasswordActions';\n\nimport \"../styles.css\";\n\nconst url = \"http://localhost:3000\";\n\nconst ResetPassword = () => {\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n    const [token, setToken] = useState();\n    const { logged } = useSelector(({login}) => login);\n    const dispatch = useDispatch();\n    \n    if (logged) return <Redirect to='/'/>\n\n    const handleSubmit = () => {\n        event.preventDefault();\n        dispatch(resetPasswordRequest({ token, email, password }));\n        window.location.replace(`${url}/login`);\n    }\n\n    return(\n        <div>\n            <section>\n                <h1>RESET PASSWORD</h1>\n                <input className=\"fullInput\" type=\"email\" placeholder=\"Email\" onChange={event => setEmail(event.target.value)}/> <br/>\n                <input className=\"fullInput\" type=\"password\" placeholder=\"New Password\" onChange={event => setPassword(event.target.value)}/> <br/>\n                <input className=\"fullInput\" type=\"text\" placeholder=\"Authorization token\" onChange={event => setToken(event.target.value)}/> <br/>\n                <button onClick={handleSubmit}> Reset Password </button>\n            </section>\n        </div>\n    )\n};\n\nexport default withRouter(ResetPassword);"]},"metadata":{},"sourceType":"module"}